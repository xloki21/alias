x-alias-common:
  &alias-common
  image: ${ALIAS_IMAGE_NAME:-alias:1.0.0}
  profiles: [in-memory, mongodb, kafka]
  build:
    context: .
  environment:
    &alias-common-env
    MONGO_USERNAME: ${MONGO_USERNAME:-user}
    MONGO_PASSWORD: ${MONGO_PASSWORD:-pass}
    MONGO_AUTHSOURCE: ${MONGO_AUTHSOURCE:-admin}
  networks:
    - aliasnet
services:
  alias-server:
    <<: *alias-common
    container_name: alias
    command:
      - /bin/alias-server
    ports:
      - "8080:8080"
      - "8081:8081"
      - "8082:8082"
    volumes:
      - ./config/config.docker.yaml:/etc/app/config.yaml

  manager:
    <<: *alias-common
    command:
      - /bin/service-manager
    volumes:
      - ./config/config.docker.yaml:/etc/app/config.yaml
    deploy:
      mode: replicated
      replicas: 3

  stats-collector:
    <<: *alias-common
    command:
      - /bin/service-statscollector
    volumes:
      - ./config/config.docker.yaml:/etc/app/config.yaml
    deploy:
      mode: replicated
      replicas: 3

  mongodb:
    profiles: [mongodb, kafka]
    image: mongo:7.0.6
    container_name: mongodb
    environment:
      <<: *alias-common-env
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-root}
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - ./migrations/mongodb/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
    networks:
      - aliasnet

  zookeeper:
    profiles: [in-memory, mongodb, kafka]
    image: confluentinc/cp-zookeeper:7.7.1.arm64
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - aliasnet

  kafka:
    profiles: [in-memory, mongodb, kafka]
    image: confluentinc/cp-kafka:7.7.1.arm64
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9997:9997"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9997
      KAFKA_JMX_HOSTNAME: kafka
    networks:
      - aliasnet

  kafka-ui:
    profiles: [in-memory, mongodb, kafka]
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka-init-topics
    ports:
      - "8088:8080"
    volumes:
      - ./kui_TEMP_config.yml:/etc/kafkaui/dynamic_config.yaml
    environment:
      DYNAMIC_CONFIG_ENABLED: true
    networks:
      - aliasnet

  kafka-init-topics:
    profiles: [in-memory, mongodb, kafka]
    image: confluentinc/cp-kafka:7.7.1.arm64
    depends_on:
      - kafka
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                 cub kafka-ready -b kafka:29092 1 30 && \
                 kafka-topics --create --topic used --partitions 2 --replication-factor 1 --if-not-exists --bootstrap-server kafka:29092 && \
                 kafka-topics --create --topic expired --partitions 2 --replication-factor 1 --if-not-exists --bootstrap-server kafka:29092'"
    networks:
      - aliasnet

networks:
  aliasnet:
    driver: bridge